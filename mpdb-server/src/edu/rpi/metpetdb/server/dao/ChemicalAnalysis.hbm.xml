<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="edu.rpi.metpetdb.server.model">
  <class name="ChemicalAnalysis" table="chemical_analyses">
    <id name="id" column="chemical_analysis_id" unsaved-value="0">
      <generator class="sequence">
        <param name="sequence">chemical_analyses_seq</param>
      </generator>
    </id>
    
    <property name="pointX" column="point_x" />
    <property name="pointY" column="point_y" />
    <property name="datePrecision" column="date_precision" />
    <property name="spotId" column="spot_id" type="java.lang.String"/>
    <property name="analysisMethod" column="analysis_method" type="java.lang.String"/>
    <property name="location" column="where_done" type="java.lang.String"/>
    <property name="analyst" column="analyst" type="java.lang.String"/>
    <property name="analysisDate" column="analysis_date" />
    <property name="description" column="description" type="java.lang.String"/>

	<many-to-one name="reference" column="reference_id" class="Reference" lazy="false" cascade="all"/>
	<many-to-one name="image" column="image_id" class="Image" lazy="false" cascade="none"/>
    <many-to-one name="subsample" column="subsample_id" class="Subsample" lazy="false" cascade="none"/>

	<property name="largeRock" column="large_rock" type="yes_no" />
	<many-to-one name="mineral" column="mineral_id" class="Mineral" lazy="false" cascade="none"/>

    <set name="elements" table="chemical_analysis_elements" cascade="save-update">
      <key column="chemical_analysis_id" />
      <composite-element class="ChemicalAnalysisElement">
      	<!--Composite elements CANNOT be null with a set -->
      	<property name="amount" column="amount" type="float" not-null="true"/>
      	<property name="precision" column="precision" type="float" />
      	<property name="precisionUnit" column="precision_type" />
        <many-to-one name="element" class="Element" column="element_id" lazy="false"/>
	  </composite-element>
    </set>

    <set name="oxides" table="chemical_analysis_oxides" cascade="save-update">
      <key column="chemical_analysis_id" />
      <composite-element class="ChemicalAnalysisOxide">
      	<!--Composite elements CANNOT be null with a set -->
      	<property name="amount" column="amount" type="float" not-null="true"/>
      	<property name="precision" column="precision" type="float" />
      	<property name="precisionUnit" column="precision_type" />
        <many-to-one name="oxide" class="Oxide" column="oxide_id" lazy="false"/>
	  </composite-element>
    </set>

  </class>

  <query name="ChemicalAnalysis.byId">
    from ChemicalAnalysis ma
    where ma.id = :id
  </query>
  <query name="ChemicalAnalysis.bySubsampleId">
    from ChemicalAnalysis ma
    where ma.subsample.id = :subsampleId
  </query>
  <query name="ChemicalAnalysis.bySubsampleId,size">
    select count(*) from ChemicalAnalysis ma
    where ma.subsample.id = :id
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/spotId">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.spotId
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/pointX">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.pointX
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/pointY">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.pointY
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/analysisMethod">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.analysisMethod
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/location">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.location
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/analyst">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.analyst
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/analysisDate">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.analysisDate
  </query>
  <query name="ChemicalAnalysis.bySubsampleId/description">
    from ChemicalAnalysis ma
    where ma.subsample.id = :id
    order by ma.description
  </query>
   
</hibernate-mapping>