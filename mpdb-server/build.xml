<project name="mpdb" basedir="." default="tomcat-zak">

	<property file="../mpdb-common/build.properties" />

	<property name="build" location="${basedir}/build" />
	<property name="ctx_lib_server" location="${basedir}/../mpdb-common/lib-server" />
	<property name="ctx_lib" location="${basedir}/../mpdb-common/lib" />
	<property name="war" location="${build}/MetPetDB.war" />
	<property name="hibernate_cfg" value="edu/rpi/metpetdb/server/dao/hibernate.cfg.xml" />
	<property name="app_name" value="edu.rpi.metpetdb.MetPetDBApplication" />

	<property name="user_war" location="/local/db/tomcat/metpetwebtst/${user.name}/${user.name}.war" />
	<property name="prod_war" location="/local/db/tomcat/metpetweb/metpetwb/metpetweb.war" />
	<property name="catalina_home" location="/local/db/tomact/apache-tomcat-5.5.20" />

	<property name="mpdb-common-dir" location="../mpdb-common" />
	<property name="mpdb-client-dir" location="../mpdb-client" />


	<propertyfile file="src/builddate.properties">
		<entry key="builddate" value="now" type="date" pattern="yyyy.MM.dd HH.mm.ss" />
	</propertyfile>

	<filterset id="props">
		<filter token="APPUSER" value="${APPUSER}" />
		<filter token="APPPASS" value="${APPPASS}" />
		<filter token="DATABASE" value="${DATABASE}" />
		<filter token="postgis" value="${postgis}" />
		<filter token="INDICES" value="${INDICES}" />
	</filterset>
	
	<!-- Library files for classpath -->
	<path id="libs">
		<fileset dir="${ctx_lib_server}" includes="*.jar" />
		<fileset dir="${ctx_lib}" includes="*.jar" />
		<pathelement location="${gwt_home}/gwt-user.jar" />
		<fileset dir="${gwt_home}" includes="gwt-dev-*.jar" />
	</path>
	
	<!-- Library files for compiling java code-->
		<path id="compile-libs">
			<fileset dir="${ctx_lib_server}" includes="*.jar" />
			<fileset dir="${ctx_lib}" includes="*.jar" />
			<pathelement location="${gwt_home}/gwt-user.jar" />
			<fileset dir="${gwt_home}" includes="gwt-dev-*.jar" />
			<pathelement location="../mpdb-common/bin" />
		</path>

	<target name="setup" description="Generates the .sql files and hibernate.cfg.xml">
		<mkdir dir="${build}/schema" />
		<delete defaultexcludes="false">
			<fileset dir="${build}/schema" includes="**/.sql" />
		</delete>
		<copy todir="${build}/schema">
			<fileset dir="${basedir}/schema" includes="**/*.sql" />
			<filterset refid="props" />
		</copy>

		<delete file="${basedir}/src/${hibernate_cfg}" />
		<copy tofile="${basedir}/src/${hibernate_cfg}" file="${basedir}/hibernate.cfg.in">
			<filterset refid="props" />
		</copy>
	</target>

	<!-- Compile the server side stuff -->
	<target name="mpdb-server-compile-java" description="Compiles the java code of mpdb-server">
		<mkdir dir="${basedir}/bin" />
		<javac destdir="${basedir}/bin" srcdir="${basedir}/src" classpathref="compile-libs" source="1.5" debug="true" optimize="true" excludes="**/java_emu/**/*.java" />

		<copy todir="${basedir}/bin" includeemptydirs="no">
			<fileset dir="${basedir}/src" excludes="**/*.java" />
		</copy>
	</target>

	<target name="compile" description="Compiles the whole project">
		<ant antfile="${basedir}/../mpdb-common/build.xml" target="compile" inheritAll="false" />
		<ant antfile="${basedir}/../mpdb-client/build.xml" target="compile" inheritAll="false" />
		<antcall target="mpdb-server-compile-java"/>
	</target>

	<target name="javadoc" description="Create Javadoc API documentation">
		<mkdir dir="${mpdb-common-dir}/docs/api" />
		<javadoc sourcepath="src:../mpdb-server/src:../mpdb-client/src:../mpdb-common/src" splitindex="true" use="true" version="true" destdir="${mpdb-common-dir}/docs/api" packagenames="*" access="private" author="true">
		</javadoc >
	</target>

	<target name="war" depends="compile" description="Generates a .war file for use with a servlet container(Apache Tomcat)">
		<mkdir dir="${build}" />
		<war destfile="${war}" filesonly="true" webxml="${basedir}/web.xml">
			<fileset dir="${mpdb-client-dir}/build/${app_name}" />
			<classes dir="${basedir}/bin">
				<include name="email.properties" />
				<include name="log4j.properties" />
				<include name="files.properties" />
				<include name="builddate.properties" />
				<include name="autologin.properties" />
				<include name="${hibernate_cfg}" />
				<include name="**/*.hbm.xml" />
				<include name="**/*.class" />
			</classes>
			<classes dir="${mpdb-common-dir}/bin">
				<include name="**/*.class" />
			</classes>
			<classes dir="${mpdb-client-dir}/bin">
				<include name="**/*.class" />
			</classes>
			<!--
			<fileset dir="${mpdb-common-dir}/docs" />
			<fileset dir="${mpdb-common-dir}/reports" />
			-->
			<lib dir="${ctx_lib_server}" includes="*" />
			<lib dir="${ctx_lib}" includes="*" />
			<lib dir="${gwt_home}" includes="gwt-servlet.jar" />
		</war>
		<chmod perm="g+w" type="both">
		  <fileset dir="${build}">
		  </fileset>
		</chmod>
		
	</target>
	
	<target name="war-only" description="Generates a .war file for use with a servlet container(Apache Tomcat) (DOES NOT COMPILE)">
			<mkdir dir="${build}" />
			<war destfile="${war}" filesonly="true" webxml="${basedir}/web.xml">
				<fileset dir="${mpdb-client-dir}/build/${app_name}" />
				<classes dir="${basedir}/bin">
					<include name="email.properties" />
					<include name="log4j.properties" />
					<include name="files.properties" />
					<include name="builddate.properties" />
					<include name="autologin.properties" />
					<include name="${hibernate_cfg}" />
					<include name="**/*.hbm.xml" />
					<include name="**/*.class" />
				</classes>
				<classes dir="${mpdb-common-dir}/bin">
					<include name="**/*.class" />
				</classes>
				<classes dir="${mpdb-client-dir}/bin">
					<include name="**/*.class" />
				</classes>
				<!--
				<fileset dir="${mpdb-common-dir}/docs" />
				<fileset dir="${mpdb-common-dir}/reports" />
				-->
				<lib dir="${ctx_lib_server}" includes="*" />
				<lib dir="${ctx_lib}" includes="*" />
				<lib dir="${gwt_home}" includes="gwt-servlet.jar" />
			</war>
			<chmod perm="g+w" type="both">
			  <fileset dir="${build}">
			  </fileset>
			</chmod>
			
	</target>

	<target name="clean" description="Cleans the build by deleting bin and .gwt-cache dirs">
		<delete dir="${build}" />
		<delete dir="${basedir}/bin" />
		<delete dir="${basedir}/www" />
		<delete dir="${basedir}/.gwt-cache" />
		<delete dir="${basedir}/build" />
		<delete dir="${mpdb-common-dir}/bin" />
		<delete dir="${mpdb-common-dir}/.gwt-cache" />
		<delete dir="${mpdb-client-dir}/bin" />
		<delete dir="${mpdb-client-dir}/.gwt-cache" />
		<delete>
			<fileset dir="${basedir}/src">
				<include name="${hibernate_cfg}" />
			</fileset>
		</delete>
	</target>

	<target name="deploy-user" depends="war">
		<ant antfile="${basedir}/../mpdb-test-client/test.xml" target="test" inheritAll="false" />
		<ant antfile="${basedir}/../mpdb-test-server/build.xml" target="runtest" inheritAll="false" />
		<copy file="${war}" tofile="${user_war}" />
	</target>

	<target name="tomcat" depends="deploy-user">
		<dirname file="${user_war}" property="user_webapps_dir" />
		<basename file="${user_war}" property="user_war_name" suffix=".war" />
		<delete dir="${user_webapps_dir}/${user_war_name}" />
		<exec executable="${catalina_home}/bin/catalina.sh" taskname="tomcat">
			<arg value="run" />
		</exec>
	</target>
	
	<target name="tomcat-anthony" depends="war">
		<delete failonerror="true"  dir="/usr/share/tomcat-6/webapps/MetPetDB/" />	
		<copy failonerror="true"  file="${war}" tofile="/usr/share/tomcat-6/webapps/MetPetDB.war" />
		</target>
	
	<target name="tomcat-zak" depends="war">
		<exec failonerror="false" executable="${tomcat_home}/bin/shutdown.sh"/>
		
		<delete failonerror="true" dir="${tomcat_home}/webapps/MetPetDB"/>
		<delete failonerror="true" file="${tomcat_home}/webapps/MetPetDB.war"/>
		<copy failonerror="true" file="${war}" todir="${tomcat_home}/webapps"/>
		
		<exec failonerror="true" executable="${tomcat_home}/bin/startup.sh"/>	
	</target>

	<target name="eclipse" depends="setup" description="Sets up eclipse by generating the .classpath file and the launch configuration">
		<property name="name.e" value="MetPetDB" />

		<pathconvert property="libs.e" dirsep="/" pathsep="&quot;/&gt;&#10;&#09;&lt;classpathentry kind=&quot;lib&quot; path=&quot;">
			<path refid="libs" />
			<map from="${basedir}/" to="" />
		</pathconvert>

		<pathconvert property="gwt.e" dirsep="/" pathsep=":">
			<path>
				<fileset dir="${gwt_home}" includes="gwt-dev-*.jar" />
			</path>
		</pathconvert>

		<echo file=".classpath">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;classpath&gt;
	&lt;classpathentry kind="src" path="src" excluding="**/java_emu/**/*.java"/&gt;
	&lt;classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER"/&gt;
	&lt;classpathentry kind=&quot;lib&quot; path=&quot;${libs.e}&quot;/&gt;
	&lt;classpathentry kind="output" path="bin"/&gt;
	&lt;classpathentry combineaccessrules="false" kind="src" path="/mpdb-common"/&gt;
&lt;/classpath&gt;
</echo>

		<echo file="mpdb-server.launch"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<launchConfiguration type="org.eclipse.jdt.launching.localJavaApplication">
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_PATHS">
<listEntry value="/mpdb-server"/>
</listAttribute>
<listAttribute key="org.eclipse.debug.core.MAPPED_RESOURCE_TYPES">
<listEntry value="4"/>
</listAttribute>
<booleanAttribute key="org.eclipse.debug.core.appendEnvironmentVariables" value="true"/>
<listAttribute key="org.eclipse.jdt.launching.CLASSPATH">
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry containerPath=&quot;org.eclipse.jdt.launching.JRE_CONTAINER&quot; javaProject=&quot;mpdb-server&quot; path=&quot;1&quot; type=&quot;4&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/mpdb-client/src&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry internalArchive=&quot;/mpdb-common/src&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;"/>
<listEntry value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;runtimeClasspathEntry id=&quot;org.eclipse.jdt.launching.classpathentry.defaultClasspath&quot;&gt;&#10;&lt;memento exportedEntriesOnly=&quot;false&quot; project=&quot;mpdb-server&quot;/&gt;&#10;&lt;/runtimeClasspathEntry&gt;&#10;"/>
</listAttribute>
<booleanAttribute key="org.eclipse.jdt.launching.DEFAULT_CLASSPATH" value="false"/>
<stringAttribute key="org.eclipse.jdt.launching.MAIN_TYPE" value="com.google.gwt.dev.GWTShell"/>
<stringAttribute key="org.eclipse.jdt.launching.PROJECT_ATTR" value="mpdb-server"/>
<stringAttribute key="org.eclipse.jdt.launching.VM_ARGUMENTS" value="-Xmx256m"/>
</launchConfiguration>
]]>
</echo>
	</target>
</project>
