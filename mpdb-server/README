METPETDB README

Table of Contents
      1. Necessary Software
      	 1a. JDK (Java Development Kit)
      	 1a. Eclipse with Subclipse plugin
	 1b. PostgreSQL 8.x
	 1c. PostGIS 1.3?
	 1d. Apache Ant
	 1e. Apache Tomcat (OPTIONAL)
      2. Obtaining Source Code and Setting Up Eclipse
      3. Deploying to Tomcat Server
      4. Using Google Web Toolkit Development Shell


1. Necessary Software
   1a. JDK (Java Development Kit)
      http://java.sun.com/javase/downloads/index.jsp
       
      DO NOT need Java EE SDK
      DO NOT need NetBeans
      DO NOT need JRE (JDK includes it)

   1b.  Eclipse with Subclipse plugin
      http://www.eclipse.org/downloads/

      IDE for Java Developers

      Subclipse Plugin
      http://subclipse.tigris.org/download.html

   1c.  PostgresSQL 8.x
      http://www.postgresql.org/download/

      pgAdminIII is a GUI to interact with PostgresSQL it is not
      required for this project.

   1d.  PostGIS 1.x
      http://postgis.refractions.net/download/

   1e.  Apache Ant
      http://ant.apache.org/bindownload.cgi

   1f.  Apache Tomcat (OPTIONAL)
      Version 5.5 is known to work

2.  Obtaining Source Code
    1.  With Eclipse open go to Window->Open Perspective->Other... and select
        SVN Repository Exploring
    2.  Right click on the Left Pane (SVN Repository) and go to New->Repository
    	Location
	2a.  Url is svn+ssh://mary-kate.cs.rpi.edu/projects/metpetdb/svn
	2b.  If you have problems see http://subclipse.tigris.org/faq.html
    3.  The repository location will show up in the Left Pane
    4.  Expand the newly create repository location, and also expand the trunk
    	directory
    5.  Right click on mpdb-client and select Checkout...
    6.  Keep the default settings and click Finish
    7.  Repeat steps 5 and 6 for mpdb-common, and mpdb-server
    8.  Switch back to the Java perspective (Window->Open Perspective->Other...
    	and select Java (Default))
    9.  You will see three newly created Projects (mpdb-client, mpdb-common, and
    	mpdb-server) they will all have approximately infinity+1 errors
    10.  Expand the Project mpdb-common
    11.  Create a new document in the root of the project named build.properties
    12.  Add to build.properties the following
    	 gwt_home=[your path to gwt]
	 Where [your path to gwt] is your full path to the gwt .jar files
	 As an example
	 gwt_home=/home/anthony/development/gwt-linux-1.4.61
    11.  Right click on build.xml and select Run As->Ant Build...
    12.  Under Targets select eclipse [default] and click Run
    13.  This will generate the appropriate .classpath file
    14.  Right click on the Project and select Refresh
    15.  All of the errors for the mpdb-common Project will magically disappear
    16.  Expand the Project mpdb-client
    17.  Create a new document in the root of the project named build.properties
    18.  The contents of the file will be exactly the same as the 
    	 build.properties in the mpdb-common project
    19.  Right click on build.xml and select Run As->Ant Build...
    20.  Under Targets select eclipse and click Run
    21.  This will generat ethe appropriate .classpath file
    22.  Right click on the Project and select Refresh
    23.  All of the errors for the mpdb-client Project will magically disappear
    24.  Expand the Project mpdb-server
    25.  Create a new document in the root of the project named build.poeprties
    26.  Add to build.properties the following
    	 gwt_home=[your path to gwt]
	 postgis=[your path to postgis]
	 DATABASE=[name you want the database to be]
	 APPUSER=[name of the user you want for the database]
	 APPPASS=[password of the above user]
	 As an example
	 gwt_home=/home/anthony/development/gwt-linux
	 postgis=/usr/share/postgresql-8.2-postgis
	 DATABASE=mpdb_watera2
	 APPUSER=metpetwebtst
	 APPPASS=
    27.  Right click on build.xml and select Run As->Ant Build...
    28.  Under Targets select eclipse and click Run
    29.  Right click on the Project and select Refresh
    30.  All of the errors for the mpdb-server Project will magically disappear

3.  Deploying to Tomcat Server
    TODO

4.  Using Google Web Toolkit Development Shell
    1.  Go to Run->Open Run Dialog...
    2.  Select mpdb-server under Java Application and click Run
    3.  Select mpdb-client under Java Application and click Run
