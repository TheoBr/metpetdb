<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:security="http://www.springframework.org/schema/security"
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
             http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.0.xsd
             http://www.springframework.org/schema/oxm
           http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd 
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd
           "
           >
 
 <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
 <tx:annotation-driven  transaction-manager="transactionManager"/>
 
 
 
 <!-- BEGINNING OF SECURITY RELATED BUSINESS  -->
 
 <security:global-method-security pre-post-annotations="enabled"/>
 
 <security:http  auto-config='false' >
  <security:intercept-url pattern="/secure/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
  <security:custom-filter position="FORM_LOGIN_FILTER" ref="myFilter" />
  <security:custom-filter position="LAST" ref="jsonpFilter" />
  <security:http-basic/> 
 </security:http>


  <bean id="myFilter" class="edu.rpi.metpetrest.security.MyAuthenticationFilter">
  	<property name="authenticationManager" ref="authenticationManager"/>
  </bean>


  <bean id="jsonpFilter" class="edu.rpi.metpetrest.MyJsonpFilter"/>
   
 <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider user-service-ref='loginDAO'/>
  </security:authentication-manager>

  <bean id="loginDAO"  class="edu.rpi.metpetrest.dao.LoginDAOImpl">
    <property name="dataSource" ref="dataSource"/>
  </bean>
    
    
    
  <!-- END OF SECURITY RELATED BUSINESS -->
    
    
    
 <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <property name="configLocation" value="classpath:/ehcache.xml"/>
</bean>
 
  
 <bean id="sampleDAO" class="edu.rpi.metpetrest.dao.SampleDAOImpl">
 	<constructor-arg ref="cacheManager"/>
 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 
 
  <bean id="namedSampleDAO" class="edu.rpi.metpetrest.dao.NamedSampleDAOImpl">
 	<constructor-arg ref="dataSource"/>
 </bean>
 
 <bean id="sampleMineralMapper" class="edu.rpi.metpetrest.dao.MySampleMineralsMapper" scope="prototype">
 	 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 
 <bean id="publicationDAO" class="edu.rpi.metpetrest.dao.PublicationDAOImpl">
 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 
 
 <bean id="userDAO" class="edu.rpi.metpetrest.dao.UserDAOImpl">
 	<property name="dataSource" ref="dataSource"></property>
 </bean>
 
 <bean id="chemicalAnalysisDAO" class="edu.rpi.metpetrest.dao.ChemicalAnalysisDAOImpl">
 
 	<constructor-arg ref="dataSource"/>
 	
 	<property name="dataSource" ref="dataSource"></property> 	
 </bean>
 
   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="org.postgis.DriverWrapper"/>
	<property name="url" value="jdbc:postgresql_postGIS://@DATABASE_HOST@/@DATABASE@"/>
    <property name="username" value="@APPUSER@"/>
    <property name="password" value="@APPPASS@"/>
  </bean> 

<!--
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="org.postgis.DriverWrapper"/>
    <property name="url" value="jdbc:postgresql_postGIS://localhost/mpdb3"/>
    <property name="username" value="metpetwebdev"/>
    <property name="password" value="metpetwebdev"/>
  </bean>  -->
    
    	
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	<property name="dataSource" ref="dataSource"/>
  </bean>

 
   <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
  <property name="mediaTypes">
    <map>
      <entry key="json" value="application/json"/>
      <entry key="xml" value="application/xml"/>
      
    </map>
  </property>
  <property name="viewResolvers">
    <list>
      <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
      <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
      </bean>
    </list>
  </property>
  <property name="defaultViews">
    <list>
      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />    
     </list>
  </property>
</bean> 


  <bean id="secureUrlRestService" class="edu.rpi.metpetrest.security.SecureUrlController">
  	<property name="userDAO" ref="userDAO"></property>
  	<property name="chemicalAnalysisDAO" ref="chemicalAnalysisDAO"></property>
  	<property name="sampleDAO" ref="sampleDAO"></property>
  	<property name="namedSampleDAO" ref="namedSampleDAO"></property>
  	
  </bean>

  <bean id="urlRestService" class="edu.rpi.metpetrest.UrlController">
  	<property name="sampleDAO" ref="sampleDAO"></property>
  	<property name="publicationDAO" ref="publicationDAO"></property>
  	<property name="userDAO" ref="userDAO"></property>
  	<property name="chemicalAnalysisDAO" ref="chemicalAnalysisDAO"></property>
  </bean>

     <bean id="earthChemSamplesView" name="earthChemSamplesView" class="org.springframework.web.servlet.view.xml.MarshallingView">  	
  	  		<constructor-arg>
      		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
          		<property name="classesToBeBound">
            		<list>           		
	            		<value>edu.rpi.metpetrest.model.EarthChemModel</value>
           			</list>
        		</property>
      		</bean>
   			</constructor-arg>
  	
  	  </bean>


    <bean id="earthChemView" name="earthChemView" class="org.springframework.web.servlet.view.xml.MarshallingView">  	
  	  		<constructor-arg>
      		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
          		<property name="classesToBeBound">
            		<list>
            		
	            		<value>edu.rpi.metpetrest.model.EarthChemSample</value>
           			</list>
        		</property> 
      		</bean>
   			</constructor-arg>
  	
  	  </bean>

    <bean id="sitemapView" name="sitemapView" class="org.springframework.web.servlet.view.xml.MarshallingView">  	
  	  		<constructor-arg>
      		<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
          		<property name="classesToBeBound">
            		<list>           		
	            		<value>edu.rpi.metpetrest.sitemap.model.SitemapModel</value>
           			</list>
        		</property> 
      		</bean>
   			</constructor-arg>
  	
  	  </bean>
 
<!--  
<bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
  <property name="targetObject" ref="urlRestService" />
  <property name="targetMethod" value="getEarthChemSamples" />
  <property name="concurrent" value="false" />
</bean>
   
<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail" ref="jobDetail" />
    <property name="startDelay" value="10" />
    <property name="repeatCount" value="0" />
    <property name="repeatInterval" value="0" />
</bean>

<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="jobDetail" />
    <property name="cronExpression" value="0 0 * * * ?" />
</bean>

<bean id="simple" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
            <ref bean="simpleTrigger" />
        </list>
    </property>
</bean>
    
<bean id="cron" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
            <ref bean="cronTrigger" />
        </list>
    </property>
</bean>-->
   
    
  
   
</beans>